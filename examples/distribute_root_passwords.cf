  
######################################################################
#

# Root password distribution

# 

######################################################################


body common control

{
version => "1.2.3";
bundlesequence  => { "SetRootPassword" };
}

########################################################


bundle common g
{
vars:

  "secret_keys_dir" string => "/tmp";
}

########################################################


bundle agent SetRootPassword

{
files:

  "/var/cfengine/ppkeys/rootpw.txt"

      copy_from => scp("$(sys.fqhost)-root.txt","master_host.example.org");

      # or $(pw_class)-root.txt


  # Or get variables directly from server woth Nova


 "remote-passwd" string => remotescalar("rem_password","127.0.0.1","yes");

  # Test this on a copy


  "/tmp/shadow"

       edit_line => SetRootPw;

}

########################################################


bundle edit_line SetRootPw
  {
  vars:

   # Assume this file contains a single string of the form root:passwdhash:

   # with : delimiters to avoid end of line/file problems


   "pw" int => readstringarray("rpw","$(sys.workdir)/ppkeys/rootpw.txt",
                                                    "#[^\n]*",":","1","200");

  field_edits:

   "root:.*"

      # Set field of the file to parameter


      edit_field => col(":","2","$(rpw[1])","set");
  }

########################################################


bundle server passwords
{
vars:

  # Read a file of format

  #

  # classname: host1,host2,host4,IP-address,regex.*,etc

  #


       "pw_classes" int => readstringarray("acl","$(g.secret_keys_dir)/classes.txt",
                                                       "#[^\n]*",":","100","4000");  
  "each_pw_class" slist => getindices("acl");
 
access:

  "/secret/keys/$(each_pw_class)-root.txt"

        admit   => splitstring("$(acl[$(each_pw_class)][1])" , ":" , "100"),
    ifencrypted => "true";

}
```
